<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="https://jakarta.ee/xml/ns/jakartaee" xsi:schemaLocation="https://jakarta.ee/xml/ns/jakartaee https://jakarta.ee/xml/ns/jakartaee/web-app_5_0.xsd" id="WebApp_ID" version="5.0">
  <display-name>WebProject_JYJ</display-name>
  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>default.html</welcome-file>
    <welcome-file>default.jsp</welcome-file>
    <welcome-file>default.htm</welcome-file>
  </welcome-file-list>
  <!-- 컨테스트 초기화 매개변수 -->
  <!-- 웹 애플리케이션 전체에서 접근해서 사용할 수 있는 일종의
  상수값 혹은 설정값으로 사용할 수 있다. -->
  <context-param>
  <param-name>INIT_PARAM</param-name>
  <param-value>web.xml에 저장한 초기화 매개변수</param-value>
  </context-param>
  <!-- 데이터베이스 연결을 위한 접속정보를 컨텍스트 초기화 파라미터로 설정
   -->
  <context-param>
     <param-name>OracleDriver</param-name>
     <param-value>oracle.jdbc.OracleDriver</param-value>
  </context-param>
  <context-param>
     <param-name>OracleURL</param-name>
     <param-value>jdbc:oracle:thin:@localhost:1521:xe</param-value>
  </context-param>
  <context-param>
     <param-name>OracleId</param-name>
     <param-value>webproject_db</param-value>
  </context-param>
  <context-param>
     <param-name>OraclePwd</param-name>
     <param-value>1234</param-value>
  </context-param>
  
  <!-- 세션 유지시간 설정 : 분 단위 -->
  <session-config>
  	<session-timeout>35</session-timeout>
  </session-config>
  
  <!-- 요청명에 대한 매핑을 설정  -->
  <servlet>
  	<!-- 3.서블릿 클래스를 패키지명과 함께 등록한다. -->
  	<servlet-name>HelloServlet</servlet-name>
  	<!-- 4.즉 url-pattern에 지정한 요청명으로 요청이 들어오면
  	해당 클래스가 요청을 받아 처리하게 된다. -->
  	<servlet-class>servlet.HelloServlet</servlet-class>
  </servlet>
  <servlet-mapping>
  	<!-- 2.요청을 받을 서블릿명을 지정한다. -->
  	<servlet-name>HelloServlet</servlet-name>
  	<!-- 1.요청명을 기술한다. 컨텍스트 루트 경로를 제외한 슬러쉬로
  	시작하는 경로를 사용한다. -->
  	<url-pattern>/Servlet/HelloServlet.do</url-pattern>
  </servlet-mapping>
	
  <!-- 서블릿에서 직접 내용 출력하기(JSP를 사용하지 않음) -->
  <servlet>
  	<servlet-name>DirectServletPrint</servlet-name>
  	<servlet-class>servlet.DirectServletPrint</servlet-class>
  </servlet>
  <servlet-mapping>
  	<servlet-name>DirectServletPrint</servlet-name>
  	<url-pattern>/Servlet/DirectServletPrint.do</url-pattern>
  </servlet-mapping>
  
  <!-- MVC패턴으로 회원인증을 위한 서블릿 매핑 -->
  <servlet>
  	<servlet-name>MemberAuth</servlet-name>
  	<servlet-class>servlet.MemberAuth</servlet-class>
  	<!-- 등록된 서블릿 내에서만 사용할 수 있는 초기화 파라미터 -->
  	<init-param>
  		<param-name>admin_id</param-name>
  		<param-value>test</param-value>
  	</init-param>
  </servlet>
  <servlet-mapping>
  	<servlet-name>MemberAuth</servlet-name>
  	<url-pattern>/Servlet/MemberAuth.mvc</url-pattern>
  </servlet-mapping>
  
  <!-- 모델2 방식의 서블릿 게시판 목록 매핑 -->
  <servlet>
  	<servlet-name>MVCBoardList</servlet-name>
  	<servlet-class>model2.mvcboard.ListController</servlet-class>
  </servlet>
  <servlet-mapping>
  	<servlet-name>MVCBoardList</servlet-name>
  	<url-pattern>/board/list.do</url-pattern>
  </servlet-mapping>
  
  <!-- 모델2 방식의 게시판 목록 매핑 - 페이징 기능 추가 -->
  <servlet>
  	<servlet-name>MVCBoardListPage</servlet-name>
  	<servlet-class>model2.mvcboard.ListPageController</servlet-class>
  </servlet>
  <servlet-mapping>
  	<servlet-name>MVCBoardListPage</servlet-name>
  	<url-pattern>/board/listPage.do</url-pattern>
  </servlet-mapping>
  
  <!-- 글쓰기 페이지 매핑 -->
  <servlet>
  	<servlet-name>MVCBoardWrite</servlet-name>
  	<servlet-class>model2.mvcboard.WriteController</servlet-class>
  	<!-- 첨부파일에 대한 용량설정 -->
  	<multipart-config>
  		<max-file-size>10485760</max-file-size> <!-- 10MB -->
  		<max-request-size>10485760</max-request-size> <!-- 10MB -->
  	</multipart-config>
  </servlet>
  <servlet-mapping>
  	<servlet-name>MVCBoardWrite</servlet-name>
  	<url-pattern>/board/write.do</url-pattern>
  </servlet-mapping>
  
  <!-- 게시판 페이징 처리를 위한 설정값 -->
  <!-- 한페이지 당 출력할 게시물의 갯수 -->
  <context-param>
  	<param-name>POSTS_PER_PAGE</param-name>
  	<param-value>10</param-value>
  </context-param>
  <!-- 한 블럭당 출력할 페이지번호의 갯수 -->
  <context-param>
  	<param-name>PAGES_PER_BLOCK</param-name>
  	<param-value>5</param-value>
  </context-param>
  
  <jsp-config>
    <jsp-property-group>
        <url-pattern>*.jsp</url-pattern>
        <el-ignored>false</el-ignored>
    </jsp-property-group>
	</jsp-config>
	
</web-app>